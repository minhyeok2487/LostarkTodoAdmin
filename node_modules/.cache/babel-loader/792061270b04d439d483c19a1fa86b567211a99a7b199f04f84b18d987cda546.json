{"ast":null,"code":"import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  var badgeContentProp = props.badgeContent,\n    _props$invisible = props.invisible,\n    invisibleProp = _props$invisible === void 0 ? false : _props$invisible,\n    _props$max = props.max,\n    maxProp = _props$max === void 0 ? 99 : _props$max,\n    _props$showZero = props.showZero,\n    showZero = _props$showZero === void 0 ? false : _props$showZero;\n  var prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  var invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  var _ref = invisible ? prevProps : props,\n    badgeContent = _ref.badgeContent,\n    _ref$max = _ref.max,\n    max = _ref$max === void 0 ? maxProp : _ref$max;\n  var displayValue = badgeContent && Number(badgeContent) > max ? \"\".concat(max, \"+\") : badgeContent;\n  return {\n    badgeContent: badgeContent,\n    invisible: invisible,\n    max: max,\n    displayValue: displayValue\n  };\n}","map":{"version":3,"names":["usePreviousProps","useBadge","props","badgeContentProp","badgeContent","_props$invisible","invisible","invisibleProp","_props$max","max","maxProp","_props$showZero","showZero","prevProps","_ref","_ref$max","displayValue","Number","concat"],"sources":["/Users/minhyeok/Desktop/LostarkTodoAdmin/node_modules/@mui/base/BadgeUnstyled/useBadge.js"],"sourcesContent":["import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = props;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : props;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,YAAY;AAC7C,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EACtC,IACgBC,gBAAgB,GAI5BD,KAAK,CAJPE,YAAY;IAAAC,gBAAA,GAIVH,KAAK,CAHPI,SAAS;IAAEC,aAAa,GAAAF,gBAAA,cAAG,KAAK,GAAAA,gBAAA;IAAAG,UAAA,GAG9BN,KAAK,CAFPO,GAAG;IAAEC,OAAO,GAAAF,UAAA,cAAG,EAAE,GAAAA,UAAA;IAAAG,eAAA,GAEfT,KAAK,CADPU,QAAQ;IAARA,QAAQ,GAAAD,eAAA,cAAG,KAAK,GAAAA,eAAA;EAElB,IAAME,SAAS,GAAGb,gBAAgB,CAAC;IACjCI,YAAY,EAAED,gBAAgB;IAC9BM,GAAG,EAAEC;EACP,CAAC,CAAC;EACF,IAAIJ,SAAS,GAAGC,aAAa;EAE7B,IAAIA,aAAa,KAAK,KAAK,IAAIJ,gBAAgB,KAAK,CAAC,IAAI,CAACS,QAAQ,EAAE;IAClEN,SAAS,GAAG,IAAI;EAClB;EAEA,IAAAQ,IAAA,GAGIR,SAAS,GAAGO,SAAS,GAAGX,KAAK;IAF/BE,YAAY,GAAAU,IAAA,CAAZV,YAAY;IAAAW,QAAA,GAAAD,IAAA,CACZL,GAAG;IAAHA,GAAG,GAAAM,QAAA,cAAGL,OAAO,GAAAK,QAAA;EAEf,IAAMC,YAAY,GAAGZ,YAAY,IAAIa,MAAM,CAACb,YAAY,CAAC,GAAGK,GAAG,MAAAS,MAAA,CAAMT,GAAG,SAAML,YAAY;EAC1F,OAAO;IACLA,YAAY,EAAZA,YAAY;IACZE,SAAS,EAATA,SAAS;IACTG,GAAG,EAAHA,GAAG;IACHO,YAAY,EAAZA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}