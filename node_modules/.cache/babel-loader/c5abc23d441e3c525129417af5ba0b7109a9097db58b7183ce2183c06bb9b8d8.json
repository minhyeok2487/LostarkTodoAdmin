{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { MenuUnstyledContext } from '../MenuUnstyled';\nimport { useButton } from '../ButtonUnstyled';\nexport default function useMenuItem(props) {\n  const {\n    component,\n    disabled = false,\n    ref,\n    label\n  } = props;\n  const id = useId();\n  const menuContext = React.useContext(MenuUnstyledContext);\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, ref);\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n  const {\n    registerItem,\n    unregisterItem,\n    open\n  } = menuContext;\n  React.useEffect(() => {\n    if (id === undefined) {\n      return undefined;\n    }\n    registerItem(id, {\n      disabled,\n      id,\n      ref: itemRef,\n      label\n    });\n    return () => unregisterItem(id);\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible\n  } = useButton({\n    component,\n    ref: handleRef,\n    disabled\n  }); // Ensure the menu item is focused when highlighted\n\n  const [focusRequested, requestFocus] = React.useState(false);\n  const focusIfRequested = React.useCallback(() => {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(() => {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id,\n    disabled,\n    label\n  });\n  const itemState = menuContext.getItemState(id != null ? id : '');\n  const {\n    highlighted\n  } = itemState != null ? itemState : {\n    highlighted: false\n  };\n  React.useEffect(() => {\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n  if (id === undefined) {\n    return {\n      getRootProps: other => _extends({}, other, getButtonProps(other), {\n        role: 'menuitem'\n      }),\n      itemState: null,\n      focusVisible\n    };\n  }\n  return {\n    getRootProps: other => {\n      const optionProps = menuContext.getItemProps(id, other);\n      return _extends({}, other, getButtonProps(other), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    itemState,\n    focusVisible\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","MenuUnstyledContext","useButton","useMenuItem","props","component","disabled","ref","label","id","menuContext","useContext","itemRef","useRef","handleRef","Error","registerItem","unregisterItem","open","useEffect","undefined","getRootProps","getButtonProps","focusVisible","focusRequested","requestFocus","useState","focusIfRequested","useCallback","current","focus","useDebugValue","itemState","getItemState","highlighted","other","role","optionProps","getItemProps","tabIndex"],"sources":["/Users/minhyeok/Desktop/LostarkTodoAdmin/node_modules/@mui/base/MenuItemUnstyled/useMenuItem.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { MenuUnstyledContext } from '../MenuUnstyled';\nimport { useButton } from '../ButtonUnstyled';\nexport default function useMenuItem(props) {\n  const {\n    component,\n    disabled = false,\n    ref,\n    label\n  } = props;\n  const id = useId();\n  const menuContext = React.useContext(MenuUnstyledContext);\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, ref);\n\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n\n  const {\n    registerItem,\n    unregisterItem,\n    open\n  } = menuContext;\n  React.useEffect(() => {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    registerItem(id, {\n      disabled,\n      id,\n      ref: itemRef,\n      label\n    });\n    return () => unregisterItem(id);\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible\n  } = useButton({\n    component,\n    ref: handleRef,\n    disabled\n  }); // Ensure the menu item is focused when highlighted\n\n  const [focusRequested, requestFocus] = React.useState(false);\n  const focusIfRequested = React.useCallback(() => {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(() => {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id,\n    disabled,\n    label\n  });\n  const itemState = menuContext.getItemState(id != null ? id : '');\n  const {\n    highlighted\n  } = itemState != null ? itemState : {\n    highlighted: false\n  };\n  React.useEffect(() => {\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n\n  if (id === undefined) {\n    return {\n      getRootProps: other => _extends({}, other, getButtonProps(other), {\n        role: 'menuitem'\n      }),\n      itemState: null,\n      focusVisible\n    };\n  }\n\n  return {\n    getRootProps: other => {\n      const optionProps = menuContext.getItemProps(id, other);\n      return _extends({}, other, getButtonProps(other), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    itemState,\n    focusVisible\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}